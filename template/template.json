{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ResourcePrefix": {
      "type": "string",
      "defaultValue": "chatgpt-",
      "metadata": {
        "description": "provide a 2-13 character prefix for all resources."
      }
    },
    "mongoContainerName":{
		"type": "string",
		"defaultValue": "[concat(parameters('ResourcePrefix'),'mongo-',parameters('newGuid'))]"
	},
	"mongoPort": {
      "type": "int",
      "defaultValue": 27017,
      "metadata": {
        "description": "Port to open on the container and the public IP address."
      }
    },
	"meilisearchContainerName":{
		"type": "string",
		"defaultValue": "[concat(parameters('ResourcePrefix'),'meilisearch-',parameters('newGuid'))]"
	},
	"meilisearchPort":{
		"type": "int",
		"defaultValue": 7700,
		"metadata": {
			"description": "Port for meilisearch server, default is 7700"
		}
	},
    "containerCpuCount": {
      "type": "int",
      "defaultValue": 1
    },
    "containerMemory": {
      "type": "int",
      "defaultValue": 2,
	  "metadata": {
		  "description": "Container memory in GB"
	  }
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "[concat(parameters('ResourcePrefix'),'my-plan')]"
    },
    "appServicePlanSkuTier": {
      "type": "string",
      "defaultValue": "P1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ]
    },
    "appServiceName": {
      "type": "string",
      "defaultValue": "[concat(parameters('ResourcePrefix'),'my-site']"
    },
    "OpenAIBaseURL": {
      "type": "string",
	  "defaultValue": "https://<your openai resource>.openai.azure.com",
      "metadata": {
        "description": "Base URL of OpenAI Resource"
      }
    },
    "OpenAIKey": {
      "type": "securestring",
      "defaultValue": "sk-",
      "metadata": {
        "description": "OpenAI API Key"
      }
    },
    "OpenAIModels": {
      "type": "string",
      "defaultValue": "gpt-4,text-davinci-003,gpt-35-turbo,gpt-4-32k",
      "metadata": {
        "description": "OpenAI Models"
      }
    },
    "newGuid": {
      "type": "string",
      "defaultValue": "[newGuid()]"
    }
  },
  "variables": {
    "WebAppImageName": "DOCKER|richardeee/chatgpt-clone:latest",
    "MongoImageName": "mongo",
    "MeilisearchImageName": "getmeili/meilisearch:v1.0"
  },
  "resources": [
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2021-10-01",
      "name": "[parameters('mongoContainerName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "containers": [
          {
            "name": "mongo",
            "properties": {
              "image": "[variables('MongoImageName')]",
			  "ports": [
                {
                  "port": "[parameters('mongoPort')]",
                  "protocol": "TCP"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": "[parameters('containerCpuCount')]",
                  "memoryInGB": "[parameters('containerMemory')]"
                }
              }
            }
          }
        ],
        "osType": "Linux",
        "restartPolicy": "OnFailure",
		"ipAddress": {
          "type": "Public",
          "ports": [
            {
              "port": "[parameters('mongoPort')]",
              "protocol": "TCP"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2021-10-01",
      "name": "[parameters('meilisearchContainerName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "containers": [
          {
            "name": "meilisearch",
            "properties": {
              "image": "[variables('MeilisearchImageName')]",
			  "ports": [
                {
                  "port": "[parameters('meilisearchPort')]",
                  "protocol": "TCP"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": "[parameters('containerCpuCount')]",
                  "memoryInGB": "[parameters('containerMemory')]"
                }
              }
            }
          }
        ],
        "osType": "Linux",
        "restartPolicy": "OnFailure",
		"ipAddress": {
          "type": "Public",
          "ports": [
            {
              "port": "[parameters('meilisearchPort')]",
              "protocol": "TCP"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[parameters('appServicePlanName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "tier": "[parameters('appServicePlanSkuTier')]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('appServiceName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms/', parameters('appServicePlanName'))]",
        "[resourceId('Microsoft.ContainerInstance/containerGroups/', parameters('mongoContainerName'))]",
        "[resourceId('Microsoft.ContainerInstance/containerGroups/', parameters('meilisearchContainerName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "[variables('WebAppImageName')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}/{1}', parameters('appServiceName'), 'appsettings')]",
      "kind": "string",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', concat(parameters('ResourcePrefix'),parameters('appServiceName'),'-',parameters('newGuid')))]"
      ],
      "properties": {
        "OPENAI_MODELS": "[parameters('OpenAIModels')]",
        "OPENAI_API_BASE": "parameters('OpenAIBaseURL')]",
        "OPENAI_API_KEY": "[parameters('OpenAIKey')]",
        "MONGO_URL": "[concat('mongodb://', reference(resourceId('Microsoft.ContainerInstance/containerGroups', parameters('mongoContainerName')), '2018-10-01').ipAddress.ip, ':', parameters('mongoPort'))]",
        "MEILI_HOST":"[concat('http://', reference(resourceId('Microsoft.ContainerInstance/containerGroups', parameters('meilisearchContainerName')), '2018-10-01').ipAddress.ip, ':', parameters('meilisearchPort'))]",
        "MEILI_HTTP_ADDR":"[concat(reference(resourceId('Microsoft.ContainerInstance/containerGroups', parameters('meilisearchContainerName')), '2018-10-01').ipAddress.ip, ':', parameters('meilisearchPort'))]",
        "SEARCH": 1
      }
    }
  ]
}
